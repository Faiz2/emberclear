#!/bin/bash
#
# A script to make working with docker/compose to have
# less typing.
#
# For local development only.

UI_PATH="packages/frontend"
RELAY_PATH="packages/relays"
COMPOSE="docker-compose -f scripts/docker-compose.yml --project-directory ./packages -p emberclear"

function runstuff {
  # First arg
  given_command=$1
  # The rest of the args
  arguments=${@:2}

  case $given_command in
    dc)       ${COMPOSE} $arguments;;
    up:build) ${COMPOSE} up --build $arguments;;
    up)       ${COMPOSE} up $arguments;;
    bash)     ${COMPOSE} run --rm $arguments bash;;

    restart) ${COMPOSE} stop $arguments && ${COMPOSE} start $arguments;;
    deploy) ( ./scripts/deploy );;
    yarn) ( cd $UI_PATH && yarn $arguments );;
    yarn:reinstall) ( cd $UI_PATH && rm -rf dist tmp node_modules yarn.lock && yarn );;

    # Don't name any folders bin, obj, tmp, dist, or node_modules
    clean:all)
      echo "Cleaning..."
      runstuff clean:frontend
      runstuff clean:relays
    ;;

    clean:relays)
      shopt -s globstar
      rm -rf **/deps && \
      rm -rf **/_build
    ;;

    clean:frontend)
      shopt -s globstar
      rm -rf **/node_modules && \
      runstuff clean:frontend-build
    ;;

    clean:frontend-build)
      shopt -s globstar
      rm -rf **/dist && \
      rm -rf **/tmp && \
      rm -rf **/concat-stats-for
    ;;

    submodules:update)
      ( cd ${RELAY_PATH}/phoenix-relay && git pull origin master )
    ;;

    *)
      # echo "forwarding to docker-compose: $@"
      # ${COMPOSE} $@
      print_help
    ;;
  esac
}

function print_help {

  echo ""
  echo "Available Commands:"
  echo ""
  echo "dc             : short for docker-compose"
  echo "up:build"
  echo "up"
  echo "bash"
  echo "restart        : restart a specific docker-compose service"
  echo ""
  echo "deploy         : deploys to github pages"
  echo "yarn"
  echo "yarn:reinstall"
  echo ""
  echo "clean:all      : recursively removes dist, node_modules, and tmp directories"
}

if [ $1 ]; then
  runstuff $*
else
  print_help
fi
